buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = 'sponge'
			url = 'https://repo.spongepowered.org/maven'
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
		classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
	}
}

//plugins {
//	id "org.gradle.java"
//	id "com.scuilion.syntastic" version "0.3.8"
//}

apply plugin: 'net.minecraftforge.gradle.liteloader'
apply plugin: 'org.spongepowered.mixin'
//apply plugin: 'net.minecraftforge.gradle.forge'

version = "2.8.1"
group = "yalter.mousetweaks"
archivesBaseName = "MouseTweaks"

minecraft {
	//version = "1.10.2-12.18.2.2118"
	version = "1.10.2"
	runDir = "run"
	mappings = "stable_29"

	replace '@VERSION@', project.version
}

mixin {
	defaultObfuscationEnv notch
}

jar {
	from sourceSets.api.output
	archiveName = "${project.archivesBaseName}-${version}-mc${project.minecraft.version}.jar"
}

sourceJar {
	from sourceSets.api.allSource
	archiveName = "${project.archivesBaseName}-${version}-mc${project.minecraft.version}-src.jar"
}

dependencies {
	provided files('forgeSrc-1.10.2-12.18.2.2118.jar')
}

sourceSets {
	main {
		//java {
		//        exclude '**/liteloader/*'
		//}
		resources {
			exclude 'litemod.json'
		}
	}
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		include 'litemod.json'

		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
		exclude 'litemod.json'
	}
}

task apiJar(type: Jar) {
	from sourceSets.api.output
	archiveName = "${project.archivesBaseName}-${version}-mc${project.minecraft.version}-api.jar"
}

artifacts {
	archives apiJar
}

//allprojects {
//	gradle.projectsEvaluated {
//		tasks.withType(JavaCompile) {
//			options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//		}
//	}
//}
